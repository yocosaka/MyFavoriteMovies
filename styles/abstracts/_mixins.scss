$breakpoints: (
  'mob': 'screen and (min-width: 320px)',
  'sm': 'screen and (min-width: 640px)',
  'tab': 'screen and (min-width: 768px)',
  'spc': 'screen and (min-width: 1024px)',
  'pc': 'screen and (min-width: 1280px)',
  'xl': 'screen and (min-width: 1536px)',
  'xs': 'screen and (max-width: 375px)',
) !default;

@mixin mq($breakpoint) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

@mixin centerContent {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin textOverflow {
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin noUserSelect {
  user-select: none;
}

@mixin container {
  width: var(--width-mob);
  margin: 0 auto;
  max-width: 60rem;

  @include mq(tab) {
    width: var(--width-tab);
    max-width: var(--max-width-tab);
  }

  @include mq(pc) {
    width: var(--width-pc);
    max-width: var(--max-width-pc);
  }
}

@mixin headingFont {
  font-family: var(--font-family-secondary), sans-serif;
  font-weight: 700;
}

@mixin blackGradientBg {
  background: var(--black-gradient);
}

@mixin blackGradientBgTopToBottom {
  background: var(--black-gradient-from-top);
}

@mixin blackGradientBgTopAndBottom {
  background: var(--black-gradient-top-bottom);
}

@mixin subTitle {
  font-size: 2.1rem;
  text-transform: uppercase;
  margin-bottom: 1.6rem;
  font-weight: var(--font-weight-semi-bold);
  color: rgba(255, 255, 255, 0.7);
}

@mixin scroll-y {
  overflow-y: scroll;

  &::-webkit-scrollbar {
    width: 0.6rem;
  }

  &::-webkit-scrollbar-track {
    background-color: rgba(220, 221, 222, 1);
    border-radius: 0.6rem;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--color-black);
    border-radius: 0.6rem;
  }
}

@mixin iconSizes {
  svg {
    font-size: 2rem;
    position: relative;
    transition: var(--transition-short);
  }

  &.icon-sm {
    svg {
      font-size: 1.6rem;
    }
  }

  &.icon-lg {
    svg {
      font-size: 2.6rem;
    }
  }

  &.icon-xlg {
    svg {
      font-size: 3.4rem;
    }
  }

  &:hover,
  &.active {
    svg {
      position: relative;
      transform: translateY(-0.26rem);
    }
  }
}
